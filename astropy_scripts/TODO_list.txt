# File for adding "general purpose" TODOs:

# TODO: seed all tests with random obs tables (or random bg cubes?) otherwise I get strange failures from time to time!!!!!!
#       or use test file in gammapy-extra

#TODO: I need to read runinfo.fits!!! (need to convert format)!!! (see below)

# in observation.py
#TODO:  check that I don't break anything because of missing tests in existing code!!! (i.e. in https://github.com/mapazarr/hess-host-analyses/blob/master/hgps_survey_map/hgps_survey_map.py#L62)

# in find_obs.py
# TODO: runinfo.fits col names need to be converted!!!
# TODO: 1st we need to check if the converter has to be applied at all?
#       solution: write a converter, but don't apply it. assume the format is the accepted one in gammapy. The user should use the converter to write a new file

# TODO: make find-obs par_box recursive!!!
#       allow multiple var selections!!! (read arrays/lists)

# TODO: check https://github.com/gammapy/gammapy/issues/315

# TODO: in gammapy/examples: plot_background_model.py -> plot_cube_background_model.py
#       and update names of vairables functions, inside the script
#      (and in the docs!!!!) ex. .. literalinclude:: ../../examples/plot_background_model.py in docs/background/models.rst


See also TODOs in test_filter_observations.py:

# TODO: test sky box selection of a box with lon on the range (0, 180) deg, with border 2 !!!!
# also (0, 10) deg, with border 2 !!!!
# also (0, 200) deg, with border 2 !!!!
# what is border for???!!!

# TODO: I'm testing on the elements that survive the selection, but not on the ones that fail!!!! -> ~done?
#       if for instance all elements are skipped because of a problem in the selection, then the test passes as good!!!
#       would testing on the inverted selection help??!!!
#       not completely: I can have the same problem!!!
#       on top of that, test that the sum of entries in both tables should be the total number of entries in the original table -> works, but is it enough?

# TODO: a really long selection (in find-obs), with many criteria


FAKE OBS:

- make a dummy obs table

- generate event lists according to the dummy obs table

- fake bg like in dummy bg model
  - add a dependency with zenith angle (what about azimuth, muon eff, n tels, ...?)
  - add this dependency/ies also into dummy bg model?

- add gaussian sources according to TeVCAT
  - take into account the extensions of the sources, and the fluxes, and the PSF
  - maybe gaussian is not the best model for extended sources: disk/ellipse with radius of the sources + PSF?

- for the bg cube models:
 - make it work so that no HESS data is necessary
 - make it work with few data (few alt-az bins?), so that the scripts run fast
 - if this works, maybe I don't need the DEBUG variable any more, since I won't need DEBUG > 1 !!!! (I can probably also remove the DEBUG > 2 calls, right?)
